{
	"favoriters": [],
	"owner": "550923",
	"lastUpdatedBy": "550923",
	"lastRevision": 585194466,
	"team": null,
	"id": "d439db0e-24e0-3ff8-7c13-c33b740ed10a",
	"name": "Player Stats Model",
	"description": "1. Before running the test cases make sure that there exists a player with name : gapptest and secret : gapptest.\n2. If no record found create user with the above credentials.\n3. Create stats record for the above player in ws_stats table with round duration = 60.\n4. Collection includes Test Cases for validating round high, round average, average points per word, average word count, longest word and total rounds.",
	"order": [],
	"folders": [
		{
			"owner": "550923",
			"lastUpdatedBy": "550923",
			"lastRevision": 585195009,
			"id": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"name": "Test Compute method for averages",
			"description": "TODO :\nCreate new player with name: gapptest and secret: gapptest if one doesn't exist.\nCreate a stats record against this player in ws_stats table.\nStats record should be for round duration 60.\n\n1. Player should login with his credentials.\n2. Player should have an existing stats record for 1 minute round duration in the databse.\n3. Fetch player stats for 1 minute round duration.\n4. Create new round data.\n5. Compute new stats from new round data and the existing stats data.\n6. POST new round data to compute method.\n7. Fetch new stats data from database.\n8. Validate new stats data from database against the expected stats.\n9. Logout player.",
			"order": [
				"eecf55ca-3242-02b0-ffb2-9d99782e1844",
				"ae49a3b5-009d-6121-cba6-4e13aef862a5",
				"4f307d63-f425-db64-86e3-6d912dad863c",
				"3e77ae5a-cd25-47b7-ecb5-6231c7a78c0e",
				"ee6b0b1b-aec1-4fcf-aa7c-3b5dba8f7ac6",
				"752bcb9f-d715-c92c-138e-9ee6b1d76b53"
			]
		},
		{
			"owner": "550923",
			"lastUpdatedBy": "550923",
			"lastRevision": 585195109,
			"id": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"name": "Test Longest word",
			"description": "TODO :\nCreate new player with name: gapptest and secret: gapptest if one doesn't exist.\nCreate a stats record against this player in ws_stats table.\nStats record should be for round duration 60.\n\n1. Player should login with his credentials.\n2. Player should have an existing stats record for 1 minute round duration in the databse.\n3. Fetch player stats for 1 minute round duration.\n4. Create new round data.\n5. Test cases validate longest word.\n9. Logout player.",
			"order": [
				"fdb9a79a-1609-7b27-54fd-d01557a32dbc",
				"e94516a6-ad85-d51b-1f47-8f4b7a34ad40",
				"48a28eda-5977-0fa3-ec20-656386a49ad4",
				"2d4f40df-5dec-bcc4-c8a7-150a4ca80217",
				"0ce04dfb-9830-e4bb-efbe-87f26141b2bd",
				"d533ca20-82d4-2a31-17ea-925265eaaa76",
				"31a7ba89-c33a-ff4a-89db-bb57d774113b",
				"af868b0c-79f2-6a14-a3d3-56aafc0aa612",
				"567ba53c-40ce-a835-b9a4-8edb9ab59e5c",
				"6d497a10-c907-83c7-91cd-7d9adfc8fbed"
			]
		},
		{
			"owner": "550923",
			"lastUpdatedBy": "550923",
			"lastRevision": 585195186,
			"id": "0e493142-dc60-061a-2993-2887f50635b9",
			"name": "Test Round Highest points",
			"description": "TODO :\nCreate new player with name: gapptest and secret: gapptest if one doesn't exist.\nCreate a stats record against this player in ws_stats table.\nStats record should be for round duration 60.\n\n1. Player should login with his credentials.\n2. Player should have an existing stats record for 1 minute round duration in the databse.\n3. Fetch player stats for 1 minute round duration.\n4. Create new round data.\n5. Test cases validate round high.\n9. Logout player.",
			"order": [
				"96f1eb8f-ab23-7bb8-4b3c-ca538696d881",
				"c9dd5784-d982-d52b-5bf1-277705e45627",
				"a19b2d41-6983-3175-a476-d849dfb47d9f",
				"ddbebc54-bd85-d3a7-ab82-e495698d815f",
				"509aa314-5e96-ffab-0860-1fad28b6f576",
				"46b994f4-2594-27a1-6301-647c5fcb036b",
				"9c4ed41d-985b-ff01-2e99-bcf4e7f288a8",
				"9b22be46-9405-a6a4-e95d-bac7a07dc735",
				"a9536af8-a3e1-1cc0-e016-c74e46895416",
				"565d9364-dee9-351d-e1a6-b6b1134d57e2"
			]
		},
		{
			"owner": "550923",
			"lastUpdatedBy": "550923",
			"lastRevision": 585202577,
			"id": "1216803b-46c9-b971-f46b-7ed948134d04",
			"name": "Validate Forbidden actions for player",
			"description": "DELETE, PUT and GET actions are forbidden for Player_Stats model.",
			"order": [
				"249cc8bd-1936-6207-288e-5058c614305d",
				"04d88d6f-7e83-0319-4b1b-7389ab8fdad9",
				"af0a0e28-5759-f53b-7594-4236ddbc7b00"
			]
		}
	],
	"hasRequests": true,
	"requests": [
		{
			"folder": "1216803b-46c9-b971-f46b-7ed948134d04",
			"id": "04d88d6f-7e83-0319-4b1b-7389ab8fdad9",
			"name": "PUT action for Player_Stats model",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"idPlayer\":387,\n    \"roundHigh\":45\n  }\n}",
			"descriptionFormat": null,
			"description": "PUT action is not allowed from player. It is handled by the bussiness logic of the application.",
			"headers": "Content-Type: application/json\n",
			"method": "PUT",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"403 Forbidden\";\ntests[\"Response code is 403\"] = responseCode.code === 403;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "0ce04dfb-9830-e4bb-efbe-87f26141b2bd",
			"name": "Validate Lesser longest word",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate longest word.\nLongest word should be the same as previous one.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Longest word\"] = data.model.LongestWord == environment[\"longestWordStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1216803b-46c9-b971-f46b-7ed948134d04",
			"id": "249cc8bd-1936-6207-288e-5058c614305d",
			"name": "DELETE action to test Player_Stats model",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "",
			"descriptionFormat": null,
			"description": "Delete action is forbidden for any player.",
			"headers": "Content-Type: application/json\n",
			"method": "DELETE",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?id=387",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"403 Forbidden\";\ntests[\"Response code is 403\"] = responseCode.code === 403;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "2d4f40df-5dec-bcc4-c8a7-150a4ca80217",
			"name": "Longest word lesser than existing ",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"36\",\n      \"longestWord\" : \"{{currentLongestWordStats}}\",\n      \"wordCount\" : 4\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give longest word input which has lesser string length than the existing longest word in database.\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "var len = (environment.longestWordStats).length - 1;\nvar letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nvar longestWord = '';\nfor(i=0; i < len ; i++){\n    longestWord += letters.charAt(Math.floor(Math.random() * 26));\n}\npostman.setEnvironmentVariable(\"currentLongestWordStats\",longestWord);",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "31a7ba89-c33a-ff4a-89db-bb57d774113b",
			"name": "Validate new Longest word",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate longest word.\nLongest word should be the same as previous one.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Longest word\"] = data.model.LongestWord == environment[\"longestWordStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "3e77ae5a-cd25-47b7-ecb5-6231c7a78c0e",
			"name": "Insert new round data",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"{{pointsStats}}\",\n      \"longestWord\" : \"mark\",\n      \"wordCount\" : \"{{wordCountStats}}\"\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Compute stats from newly fetched data and the static data. \nPOST new round data to compute method.\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "var points = Math.floor((Math.random() * (parseInt(environment.maxPoints60Stats) - parseInt(environment.minPoints60Stats))) + parseInt(environment.minPoints60Stats)+1);\npostman.setEnvironmentVariable(\"pointsStats\",points);\n\nvar wordCount = Math.floor((Math.random() * (parseInt(environment.maxWordCount60Stats) - parseInt(environment.minWordCount60Stats))) + parseInt(environment.minWordCount60Stats)+1);\npostman.setEnvironmentVariable(\"wordCountStats\",wordCount);\n\nvar totalRounds = parseInt(environment.totalRoundsStats);\npostman.setEnvironmentVariable(\"totalRoundsStats\",parseInt(environment.totalRoundsStats) + 1);\n\nvar roundAvg = (parseFloat(environment.roundAvgStats) * parseFloat(totalRounds) + parseFloat(environment.pointsStats)) / parseFloat(environment.totalRoundsStats);\npostman.setEnvironmentVariable(\"roundAvgStats\",Math.round(roundAvg * 10)/10);\n\nvar avgWordCount = (parseFloat(environment.avgWordCountStats) * parseFloat(totalRounds) + parseFloat(environment.wordCountStats)) / parseFloat(environment.totalRoundsStats);\npostman.setEnvironmentVariable(\"avgWordCountStats\",Math.round(avgWordCount * 10)/10);\n\npostman.setEnvironmentVariable(\"avgPtsPerWordStats\",Math.round(parseFloat(roundAvg)/parseFloat(avgWordCount) * 10)/10);",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "46b994f4-2594-27a1-6301-647c5fcb036b",
			"name": "Round high equal to existing round high",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"{{pointsStats}}\",\n      \"longestWord\" : \"mark\",\n      \"wordCount\" : 1\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give round high input which is equal to the existing round high.\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "postman.setEnvironmentVariable(\"pointsStats\", parseInt(environment.roundHighStats));",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "48a28eda-5977-0fa3-ec20-656386a49ad4",
			"name": "Retrieve Stats",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nAssumption made that, there is a stats record against logged in player with round duration 60 (in secs).",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"longestWordStats\",data.model.LongestWord);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "4f307d63-f425-db64-86e3-6d912dad863c",
			"name": "Retrieve Stats",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nAssumption made that, there is a stats record against logged in player with round duration 60 (in secs).",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"roundAvgStats\",data.model.RoundAvg);\npostman.setEnvironmentVariable(\"avgPtsPerWordStats\",data.model.AvgPtsPerWord);\npostman.setEnvironmentVariable(\"avgWordCountStats\",data.model.AvgWordCount);\npostman.setEnvironmentVariable(\"totalRoundsStats\",data.model.TotalRounds);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "509aa314-5e96-ffab-0860-1fad28b6f576",
			"name": "Validate Lesser Round High",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate round High.\nRound high should be the same as previous one.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Round Highest points\"] = data.model.RoundHigh == environment[\"roundHighStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "565d9364-dee9-351d-e1a6-b6b1134d57e2",
			"name": "Player logout",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"method\":\"logout\"\n}",
			"descriptionFormat": null,
			"description": "",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "567ba53c-40ce-a835-b9a4-8edb9ab59e5c",
			"name": "Validate new longest word",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate longest word.\nLongest word should be the new longest word.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Longest word\"] = data.model.LongestWord == environment[\"longestWordStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "6d497a10-c907-83c7-91cd-7d9adfc8fbed",
			"name": "Player logout",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"method\":\"logout\"\n}",
			"descriptionFormat": null,
			"description": "",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "752bcb9f-d715-c92c-138e-9ee6b1d76b53",
			"name": "Player logout",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"method\":\"logout\"\n}",
			"descriptionFormat": null,
			"description": "",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": null,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "96f1eb8f-ab23-7bb8-4b3c-ca538696d881",
			"name": "POST action for player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"name\":\"gapptest\",\n    \"signInState\":1\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Input username and signin state to login player.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "9b22be46-9405-a6a4-e95d-bac7a07dc735",
			"name": "Greater round high",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"{{pointsStats}}\",\n      \"longestWord\" : \"mark\",\n      \"wordCount\" : 1\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give round high input which is greater than the existing round high.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "postman.setEnvironmentVariable(\"pointsStats\", parseInt(environment.roundHighStats) + 1);\n\npostman.setEnvironmentVariable(\"roundHighStats\",environment.pointsStats);\n",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "9c4ed41d-985b-ff01-2e99-bcf4e7f288a8",
			"name": "Validate round high equals to existing round high",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate round High.\nRound high should be the same as previous one.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Round Highest points\"] = data.model.RoundHigh == environment[\"roundHighStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "a19b2d41-6983-3175-a476-d849dfb47d9f",
			"name": "Retrieve Stats",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nAssumption made that, there is a stats record against logged in player with round duration 60 (in secs).",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"roundHighStats\",data.model.RoundHigh);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "a9536af8-a3e1-1cc0-e016-c74e46895416",
			"name": "Validate greater  round high",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate round High.\nRound high should be greater than previous one.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Round Highest points\"] = data.model.RoundHigh == environment[\"roundHighStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "ae49a3b5-009d-6121-cba6-4e13aef862a5",
			"name": "POST action to complete player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"secret\":\"gapptest\",\n    \"signInState\":10\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Enter user secret to complete the login process.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1216803b-46c9-b971-f46b-7ed948134d04",
			"id": "af0a0e28-5759-f53b-7594-4236ddbc7b00",
			"name": "GET action for Player_Stats model",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Only INDEX action is allowed with round duration parameter.\nGET action is forbidden.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?id=387",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify error message\"] = data.message == \"403 Forbidden\";\ntests[\"Response code is 403\"] = responseCode.code === 403;",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "af868b0c-79f2-6a14-a3d3-56aafc0aa612",
			"name": "Longest word greater than existing",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"36\",\n      \"longestWord\" : \"{{currentLongestWordStats}}\",\n      \"wordCount\" : 5\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give longest word input whose length is greater than the existing longest word.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "var len = (environment.longestWordStats).length + 1;\nvar letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nvar longestWord = '';\nfor(i=0; i < len ; i++){\n    longestWord += letters.charAt(Math.floor(Math.random() * 26));\n}\npostman.setEnvironmentVariable(\"currentLongestWordStats\",longestWord);\n\nif((environment.currentLongestWordStats).length > (environment.longestWordStats).length){\n    postman.setEnvironmentVariable(\"longestWordStats\",environment.currentLongestWordStats);\n}",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "c9dd5784-d982-d52b-5bf1-277705e45627",
			"name": "POST action to complete player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"secret\":\"gapptest\",\n    \"signInState\":10\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Enter user secret to complete the login process.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "d533ca20-82d4-2a31-17ea-925265eaaa76",
			"name": "Longest word length equals to existing longest word length",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"36\",\n      \"longestWord\" : \"{{currentLongestWordStats}}\",\n      \"wordCount\" : 3\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give longest word input whose length is equal to the existing longest word length.\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "var len = (environment.longestWordStats).length;\nvar letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\nvar longestWord = '';\nfor(i=0; i < len ; i++){\n    longestWord += letters.charAt(Math.floor(Math.random() * 26));\n}\npostman.setEnvironmentVariable(\"currentLongestWordStats\",longestWord);",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "0e493142-dc60-061a-2993-2887f50635b9",
			"id": "ddbebc54-bd85-d3a7-ab82-e495698d815f",
			"name": "Lesser Round high",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n    \"method\":\"compute\",\n    \"args\":{\n      \"roundDuration\" : 60,\n      \"points\" : \"{{pointsStats}}\",\n      \"longestWord\" : \"mark\",\n      \"wordCount\" : 1\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Give round highest input which is lesser than the existing round high.\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/",
			"preRequestScript": "if(parseInt(environment.roundHighStats) > 0)\n    postman.setEnvironmentVariable(\"pointsStats\", parseInt(environment.roundHighStats) - 1);\nelse\n    postman.setEnvironmentVariable(\"pointsStats\", 0);\n",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "e94516a6-ad85-d51b-1f47-8f4b7a34ad40",
			"name": "POST action to complete player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"secret\":\"gapptest\",\n    \"signInState\":10\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Enter user secret to complete the login process.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "ee6b0b1b-aec1-4fcf-aa7c-3b5dba8f7ac6",
			"name": "Validate averages.",
			"dataMode": "params",
			"data": null,
			"rawModeData": null,
			"descriptionFormat": null,
			"description": "Fetch stats for logged in player.\nValidate stats from data base for round avg, avg points per word, avg word count and total rounds with the computed sats.",
			"headers": "",
			"method": "GET",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player_Stats/?roundDuration=60",
			"preRequestScript": null,
			"tests": "var data = JSON.parse(responseBody);\ntests[\"Verify Round Average points\"] = parseFloat(data.model.RoundAvg) == parseFloat(environment[\"roundAvgStats\"]);\ntests[\"Verify Average Points per word\"] =  parseFloat(data.model.AvgPtsPerWord)== parseFloat(environment[\"avgPtsPerWordStats\"]);\ntests[\"Verify Average word count\"] =  parseFloat(data.model.AvgWordCount) == parseFloat(environment[\"avgWordCountStats\"]);\ntests[\"Verify Total Rounds\"] = data.model.TotalRounds == environment[\"totalRoundsStats\"];",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "1181c0f4-a772-1c3f-1771-466c2b3fbea8",
			"id": "eecf55ca-3242-02b0-ffb2-9d99782e1844",
			"name": "POST action for player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"name\":\"gapptest\",\n    \"signInState\":1\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Input username and signin state to login player.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		},
		{
			"folder": "a41d003c-1b85-c824-d97d-11e5a39683fb",
			"id": "fdb9a79a-1609-7b27-54fd-d01557a32dbc",
			"name": "POST action for player login",
			"dataMode": "raw",
			"data": [],
			"rawModeData": "{\n  \"model\":{\n    \"name\":\"gapptest\",\n    \"signInState\":1\n  },\n    \"method\":\"login\",\n    \"args\":{\n    },\n    \"noModel\":false\n}",
			"descriptionFormat": null,
			"description": "Input username and signin state to login player.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "http://www.gappangular.com/WordShuffle/Player/",
			"preRequestScript": "",
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"responses": [],
			"collectionId": "d439db0e-24e0-3ff8-7c13-c33b740ed10a"
		}
	]
}